@page "/paciente"
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations
@using BlazorUI.Client.Components.Viewmodels

@inject HttpClient Http

<h3>Paciente</h3>

<SfButton CssClass="e-primary" OnClick="OpenDialogForEdit">EDITAR</SfButton>
<SfButton CssClass="e-warning" OnClick="OpenDialogForNew">AGREGAR NUEVO</SfButton>

<SfDialog @bind-Visible="IsDialogOpen" Width="500px" ShowCloseIcon="true">
    <DialogTemplates>
        <Header>@DialogTitle</Header>
        <Content>
            <div class="form-group">
                <label>Tipo Documento:</label>
                <SfTextBox @bind-Value="paciente.TipoDocumento" Placeholder="Ingrese tipo de documento"></SfTextBox>
            </div>
            <div class="form-group">
                <label>Nro Documento:</label>
                <SfTextBox @bind-Value="paciente.NroDocumento" Placeholder="Ingrese número de documento"></SfTextBox>
            </div>
            <div class="form-group">
                <label>Fecha Nacimiento:</label>
                <SfDatePicker TValue="DateTime" @bind-Value="paciente.FechaNacimiento" Placeholder="Seleccione fecha"></SfDatePicker>
            </div>
            <div class="form-group">
                <label>Nombres:</label>
                <SfTextBox @bind-Value="paciente.Nombres" Placeholder="Ingrese nombres"></SfTextBox>
            </div>
            <div class="form-group">
                <label>Apellidos:</label>
                <SfTextBox @bind-Value="paciente.Apellidos" Placeholder="Ingrese apellidos"></SfTextBox>
            </div>
            <div class="form-group">
                <label>Domicilio:</label>
                <SfTextBox @bind-Value="paciente.Domicilio" Placeholder="Ingrese domicilio"></SfTextBox>
            </div>
            <div class="form-group">
                <label>Email:</label>
                <SfTextBox @bind-Value="paciente.Email" Placeholder="Ingrese email"></SfTextBox>
            </div>
            <div class="form-group">
                <label>Cobertura:</label>
                <SfComboBox TValue="int"
                            TItem="CoberturaViewModel"
                            DataSource="@coberturas"
                            @bind-Value="paciente.IdCobertura"
                            Placeholder="Seleccione cobertura"
                            AllowFiltering="true">
                    <ComboBoxFieldSettings Value="Id" Text="NombreCompleto" />
                </SfComboBox>
            </div>
        </Content>
    </DialogTemplates>
    <SfButton CssClass="e-success" OnClick="SaveChanges">GUARDAR</SfButton>
    <SfButton CssClass="e-danger" OnClick="CloseDialog">CANCELAR</SfButton>
</SfDialog>

<h4>Procedimientos</h4>
<SfGrid DataSource="@paciente.Procedimientos" AllowPaging="true" PageSettings-PageSize="10">
    <GridColumns>
        <GridColumn Field="Id" HeaderText="ID" Width="100"></GridColumn>
        <GridColumn Field="Fecha" HeaderText="Fecha" Width="150" Format="d"></GridColumn>
        <GridColumn Field="Entorno.Nombre" HeaderText="Entorno" Width="150"></GridColumn>
        <GridColumn Field="Operador.NombreCompleto" HeaderText="Operador" Width="150"></GridColumn>
        <GridColumn Field="Anestesia.Nombre" HeaderText="Anestesia" Width="150"></GridColumn>
        <GridColumn Field="CapturaVideo" HeaderText="Captura Video" Width="150" Type="ColumnType.CheckBox"></GridColumn>
    </GridColumns>
</SfGrid>

@code {
    private PacienteViewModel paciente = new();
    private List<CoberturaViewModel> coberturas = new();
    private bool IsDialogOpen = false;
    private string DialogTitle = "Datos del Paciente";

    protected override async Task OnInitializedAsync()
    {
        coberturas = new List<CoberturaViewModel>
        {
            new CoberturaViewModel { Id = 1, NombreCompleto = "OSDE" },
            new CoberturaViewModel { Id = 2, NombreCompleto = "PAMI" },
            new CoberturaViewModel { Id = 3, NombreCompleto = "IOMA" }
        };
    }

    private void OpenDialogForEdit()
    {
        DialogTitle = "Editar Paciente";
        IsDialogOpen = true;
    }

    private void OpenDialogForNew()
    {
        paciente = new PacienteViewModel(); // Clear the form for a new patient
        DialogTitle = "Agregar Nuevo Paciente";
        IsDialogOpen = true;
    }

    private async Task SaveChanges()
    {
        var response = await Http.PostAsJsonAsync("api/paciente", paciente);
        if (response.IsSuccessStatusCode)
        {
            IsDialogOpen = false;
        }
    }

    private void CloseDialog()
    {
        IsDialogOpen = false;
    }
}
